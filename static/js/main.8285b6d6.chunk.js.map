{"version":3,"sources":["Components/Tooltip.jsx","Components/Hendi.jsx","Components/AdjustableDigitalReadout.jsx","Components/TemperatureController.jsx","Components/WavelengthController.jsx","Components/Spinner.jsx","Components/Spectrum.jsx","Components/Instructions.jsx","Components/Error.jsx","Components/VirtualHendiInterface.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Tooltip","header","text","visible","left","top","className","style","Hendi","id","seeOutside","useState","activeToolTipHeader","setActiveToolTipHeader","activeToolTipText","setActiveToolTipText","toolTipActive","setToolTipActive","setTop","setLeft","setActiveTooltip","tooltip","tooltips","detection","doping","source","coldhead","stark","quad","laserbeam","canister","skimmer","nozzle","onMouseMove","ev","clientY","clientX","alt","src","useMap","onMouseEnter","onMouseLeave","AdjustableDigitalReadout","val","digits","name","unit","onChange","increment","decrement","adjustedVal","String","Number","toFixed","padStart","value","width","onClick","TemperatureController","temperature","setTemperature","butValid","Math","min","max","handleChange","target","WavelengthController","min_lambda","setMinLambda","max_lambda","setMaxLambda","evt","console","log","err","error","incrementProp","setter","decrementProp","Spinner","props","Spectrum","data","chartRef","React","createRef","useEffect","Dygraph","current","animatedZooms","xlabel","ylabel","height","xValueParser","parseFloat","ref","blob","Blob","type","saveAs","Instructions","Error","VirtualHendiInterface","hendiRef","tempRef","lambdaRef","fgState","setFgState","toggleFgTitle","setToggleFgTitle","spectrum","setSpectrum","loadingSpectrum","setLoadingSpectrum","spectrumError","setSpectrumError","baseUrl","window","location","href","includes","parent","this","params","url","axios","get","then","resp1","urlToUse","resp","catch","reason","App","Boolean","hostname","match","document","title","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8285b6d6.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../Style/Tooltip.css\";\n\nfunction Tooltip({ header, text, visible, left, top }) {\n  if (visible) {\n    return (\n      <div className=\"tooltip\" style={{ left, top }}>\n        <label>{header}</label>\n        {text}\n      </div>\n    );\n  } else {\n    return <div />;\n  }\n}\nexport default Tooltip;\n","import React, { useState } from \"react\";\nimport \"../Style/Hendi.css\";\nimport Tooltip from \"./Tooltip\";\n\nfunction Hendi({ id, seeOutside }) {\n  const bg = true;\n  const [activeToolTipHeader, setActiveToolTipHeader] = useState(\"\");\n  const [activeToolTipText, setActiveToolTipText] = useState(\"\");\n  const [toolTipActive, setToolTipActive] = useState(false);\n\n  const [top, setTop] = useState(0);\n  const [left, setLeft] = useState(0);\n\n  const setActiveTooltip = (tooltip) => {\n    const tooltips = {\n      detection: {\n        header: \"Detection Chamber\",\n        text: (\n          <p>\n            This chamber contains the mass spectrometer and often has pressures\n            as low as 10<sup>-11</sup> Torr.\n          </p>\n        ),\n      },\n      doping: {\n        header: \"Doping Chamber\",\n        text: (\n          <p>\n            This chamber is where the analyte molecules condense into the\n            molecular beam.\n          </p>\n        ),\n      },\n      source: {\n        header: \"Source Chamber\",\n        text: <p>This is where the Helium droplets are formed.</p>,\n      },\n      coldhead: {\n        header: \"Coldhead\",\n        text: (\n          <p>\n            This is a large piece of copper which is cooled to a temperature of\n            around 30 K by the cyclic evaporation and condensation of helium.\n          </p>\n        ),\n      },\n      stark: {\n        header: \"Stark Cell\",\n        text: (\n          <p>\n            The Stark cell consists of two mirror-polished steel plates that are\n            used to generate an electric field of up to 75 kV/cm. The electric\n            field affects the rotation of the analyte based on its dipole\n            moment.\n          </p>\n        ),\n      },\n      quad: {\n        header: \"Quadrupole mass spectrometer\",\n        text: (\n          <p>\n            The mass spectrometer is used to measure the helium evaporated by\n            the excitation and subsequent relaxation of the analyte due to the\n            laser.\n          </p>\n        ),\n      },\n      laserbeam: {\n        header: \"Infrared Laser\",\n        text: (\n          <p>\n            The laser is used to excite the analyte at certain wavelengths,\n            which causes the moleule to relax, transferring its energy to the\n            helium surrounding it, causing some helium to evaporate.&nbsp; This\n            causes a decrease in the total ion signal from the mass\n            spectrometer, which forms a spectrum when scanning across a range of\n            wavelengths.\n          </p>\n        ),\n      },\n      canister: {\n        header: \"Gas Cannister\",\n        text: (\n          <p>\n            The analyte, in gas form, is stored here. It is leaked into the\n            doping chamber via a leak valve\n          </p>\n        ),\n      },\n      skimmer: {\n        header: \"Skimmer\",\n        text: (\n          <p>\n            The spray of helium droplets are skimmed into a molecular beam,\n            which then travels into the doping chamber\n          </p>\n        ),\n      },\n      nozzle: {\n        header: \"Nozzle\",\n        text: (\n          <p>\n            The helium gas, chilled from thermal contact with the coldhead, is\n            ejected from the nozzle into vacuum (~10<sup>-5</sup> Torr), rapidly\n            cooling the helium to 0.4 K, where it condenses into a superfluid.\n          </p>\n        ),\n      },\n    };\n    setToolTipActive(true);\n    setActiveToolTipHeader(tooltips[tooltip].header);\n    setActiveToolTipText(tooltips[tooltip].text);\n  };\n\n  const mouseMove = (ev) => {\n    setTop(ev.clientY);\n    setLeft(ev.clientX);\n  };\n\n  return (\n    <div className=\"hendi-box\" id={id} onMouseMove={mouseMove}>\n      <img\n        alt=\"background\"\n        className={`hendi-component ${bg ? \"\" : \"transparent\"}`}\n        id=\"hendi-bg\"\n        src=\"/Virtual-HeNDI-Spectrometer/images/hendi-background.png\"\n      />\n      <img\n        alt=\"foreground\"\n        className={`hendi-component ${seeOutside ? \"\" : \"transparent\"}`}\n        id=\"hendi-fg\"\n        src=\"/Virtual-HeNDI-Spectrometer/images/hendi-foreground.png\"\n      />\n      <img\n        alt=\"coldhead\"\n        className={`hendi-component ${!seeOutside ? \"\" : \"transparent\"}`}\n        id=\"hendi-ch\"\n        src=\"/Virtual-HeNDI-Spectrometer/images/hendi-coldhead.png\"\n      />\n      <img\n        alt=\"stark cell\"\n        className={`hendi-component ${!seeOutside ? \"\" : \"transparent\"}`}\n        id=\"hendi-stark\"\n        src=\"/Virtual-HeNDI-Spectrometer/images/hendi-stark.png\"\n      />\n      <img\n        alt=\"quadrupole\"\n        className={`hendi-component ${!seeOutside ? \"\" : \"transparent\"}`}\n        id=\"hendi-quad\"\n        src=\"/images/hendi-quad.png\"\n      />\n      <img\n        alt=\"laserbeam\"\n        className={`hendi-component ${!seeOutside ? \"\" : \"transparent\"}`}\n        id=\"hendi-laserbeam\"\n        src=\"/Virtual-HeNDI-Spectrometer/images/hendi-laserbeam.png\"\n      />\n      <img\n        alt=\"OCS canister\"\n        className={`hendi-component ${seeOutside ? \"\" : \"transparent\"}`}\n        id=\"hendi-ocs-canister\"\n        src=\"/Virtual-HeNDI-Spectrometer/images/hendi-ocs-canister.png\"\n        useMap=\"hendi-map\"\n      />\n      <Tooltip\n        header={activeToolTipHeader}\n        text={activeToolTipText}\n        visible={toolTipActive}\n        left={left}\n        top={top}\n      ></Tooltip>\n      {seeOutside && (\n        <div\n          className=\"area-div\"\n          id=\"hendi-detection-clickable\"\n          onMouseEnter={() => {\n            setActiveTooltip(\"detection\");\n          }}\n          onMouseLeave={() => {\n            setToolTipActive(false);\n          }}\n        ></div>\n      )}\n      {seeOutside && (\n        <div\n          className=\"area-div\"\n          id=\"hendi-doping-clickable\"\n          onMouseEnter={() => {\n            setActiveTooltip(\"doping\");\n          }}\n          onMouseLeave={() => {\n            setToolTipActive(false);\n          }}\n        ></div>\n      )}\n      {seeOutside && (\n        <div\n          className=\"area-div\"\n          id=\"hendi-source-clickable\"\n          onMouseEnter={() => {\n            setActiveTooltip(\"source\");\n          }}\n          onMouseLeave={() => {\n            setToolTipActive(false);\n          }}\n        ></div>\n      )}\n      {!seeOutside && (\n        <div\n          className=\"area-div\"\n          id=\"hendi-ch-clickable\"\n          onMouseEnter={() => {\n            setActiveTooltip(\"coldhead\");\n          }}\n          onMouseLeave={() => {\n            setToolTipActive(false);\n          }}\n        ></div>\n      )}\n      {!seeOutside && (\n        <div\n          className=\"area-div\"\n          id=\"hendi-stark-clickable\"\n          onMouseEnter={() => {\n            setActiveTooltip(\"stark\");\n          }}\n          onMouseLeave={() => {\n            setToolTipActive(false);\n          }}\n        ></div>\n      )}\n      {!seeOutside && (\n        <div\n          className=\"area-div\"\n          id=\"hendi-quad-clickable\"\n          onMouseEnter={() => {\n            setActiveTooltip(\"quad\");\n          }}\n          onMouseLeave={() => {\n            setToolTipActive(false);\n          }}\n        ></div>\n      )}\n      {!seeOutside && (\n        <div\n          className=\"area-div\"\n          id=\"hendi-laserbeam-clickable\"\n          onMouseEnter={() => {\n            setActiveTooltip(\"laserbeam\");\n          }}\n          onMouseLeave={() => {\n            setToolTipActive(false);\n          }}\n        ></div>\n      )}\n      {seeOutside && (\n        <div\n          className=\"area-div\"\n          id=\"hendi-canister-clickable\"\n          onMouseEnter={() => {\n            setActiveTooltip(\"canister\");\n          }}\n          onMouseLeave={() => {\n            setToolTipActive(false);\n          }}\n        ></div>\n      )}\n      {!seeOutside && (\n        <div\n          className=\"area-div\"\n          id=\"hendi-skimmer-clickable\"\n          onMouseEnter={() => {\n            setActiveTooltip(\"skimmer\");\n          }}\n          onMouseLeave={() => {\n            setToolTipActive(false);\n          }}\n        ></div>\n      )}\n      {!seeOutside && (\n        <div\n          className=\"area-div\"\n          id=\"hendi-nozzle-clickable\"\n          onMouseEnter={() => {\n            setActiveTooltip(\"nozzle\");\n          }}\n          onMouseLeave={() => {\n            setToolTipActive(false);\n          }}\n        ></div>\n      )}\n    </div>\n  );\n}\n\nexport default Hendi;\n","import React from \"react\";\nimport \"../Style/AdjustableDigitalReadout.css\";\n\nfunction AdjustableDigitalReadout({\n  val,\n  digits,\n  id,\n  className,\n  name,\n  unit,\n  onChange,\n  increment,\n  decrement,\n}) {\n  let adjustedVal = String(Number(val).toFixed(2)).padStart(digits || 6, \"0\");\n  return (\n    <div id={id} className={className + \" digital-readout-adjustable\"}>\n      <input\n        className=\"digital-readout\"\n        name={name}\n        value={adjustedVal}\n        unit={unit}\n        digits={digits || 6}\n        onChange={onChange}\n        style={{ width: `${((digits || 6) + 1) / 2}em` }}\n      />\n      <label className=\"digital-readout\">{unit}</label>\n      <div className=\"button-container\">\n        <button onClick={increment}>+</button>\n        <button onClick={decrement}>-</button>\n      </div>\n    </div>\n  );\n}\nexport default AdjustableDigitalReadout;\n","import React, { useState } from \"react\";\nimport \"../Style/TemperatureController.css\";\nimport \"../Style/VirtualHendiInterface.css\";\nimport AdjustableDigitalReadout from \"./AdjustableDigitalReadout\";\n\nfunction TemperatureController({ id, temperature, setTemperature }) {\n  const MIN = 13.5;\n  const MAX = 20;\n\n  const butValid = (val) => Math.min(Math.max(val, MIN), MAX);\n\n  // never used\n  // const [temperature, setTemperature] = useState(13.5);\n\n  // FIXME - parent={this}\n  return (\n    <div className=\"temp-controller\" id={id}>\n      <div className=\"instrument-label-readout\" id=\"temp-controller-temp\">\n        <label className=\"instrument-label\">Nozzle Temperature</label>\n        <AdjustableDigitalReadout\n          name=\"temperature\"\n          val={temperature}\n          unit=\"K\"\n          digits={5}\n          increment={() => setTemperature(butValid(temperature + 0.5))}\n          decrement={() => setTemperature(butValid(temperature - 0.5))}\n          handleChange={({ target: { value } }) =>\n            setTemperature(butValid(value))\n          }\n        ></AdjustableDigitalReadout>\n      </div>\n    </div>\n  );\n}\nexport default TemperatureController;\n","import React, { useState } from \"react\";\nimport \"../Style/WavelengthController.css\";\nimport \"../Style/VirtualHendiInterface.css\";\nimport AdjustableDigitalReadout from \"./AdjustableDigitalReadout\";\n\nfunction WavelengthController({\n  id,\n  min_lambda,\n  setMinLambda,\n  max_lambda,\n  setMaxLambda,\n}) {\n  const MIN_WAV = 2000;\n  const MAX_WAV = 2100;\n\n  const butValid = (val) => Math.min(Math.max(val, MIN_WAV), MAX_WAV);\n\n  const handleChange = (evt) => {\n    const name = evt.target.name;\n    try {\n      const val = Number(evt.target.value);\n      console.log(val);\n      if (name === \"min_lambda\") {\n        setMinLambda(butValid(val));\n      } else {\n        setMaxLambda(butValid(val));\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const incrementProp = (val, setter) => () => {\n    setter(butValid(val + 0.5));\n  };\n  const decrementProp = (val, setter) => () => {\n    setter(butValid(val - 0.5));\n  };\n\n  return (\n    <div className=\"temp-controller\" id={id}>\n      <div className=\"instrument-label-readout\" id=\"temp-controller-temp\">\n        <label className=\"instrument-label\">Min Wavelength</label>\n        <AdjustableDigitalReadout\n          name=\"min_lambda\"\n          increment={incrementProp(min_lambda, setMinLambda)}\n          decrement={decrementProp(min_lambda, setMinLambda)}\n          unit=\"cm-1\"\n          digits={7}\n          onChange={handleChange}\n          val={min_lambda}\n        ></AdjustableDigitalReadout>\n        <label className=\"instrument-label\">Max Wavelength</label>\n        <AdjustableDigitalReadout\n          name=\"max_lambda\"\n          increment={incrementProp(max_lambda, setMaxLambda)}\n          decrement={decrementProp(max_lambda, setMaxLambda)}\n          unit=\"cm-1\"\n          digits={7}\n          onChange={handleChange}\n          val={max_lambda}\n        ></AdjustableDigitalReadout>\n      </div>\n    </div>\n  );\n}\nexport default WavelengthController;\n","import React from \"react\";\nimport \"../Style/VirtualHendiInterface.css\";\n\nconst Spinner = (props) => {\n  return (\n    <div className=\"spinner-container\">\n      <img src=\"/virtual-hendi/logo512.png\" className=\"spinner\" alt=\"spinner\" />\n      <label>Loading...</label>\n    </div>\n  );\n};\nexport default Spinner;\n","import React, { useEffect } from \"react\";\nimport Dygraph from \"dygraphs\";\nimport \"../Style/VirtualHendiInterface.css\";\nimport { saveAs } from \"file-saver\";\n\nfunction Spectrum({ data }) {\n  const chartRef = React.createRef();\n  let d = undefined;\n\n  const generateSpectrum = () => {\n    return new Dygraph(chartRef.current, data, {\n      animatedZooms: true,\n      xlabel: \"Wavelength (cm<sup>-1</sup>)\",\n      ylabel: \"Intensity\",\n      width: \"auto\",\n      height: \"auto\",\n      xValueParser: parseFloat,\n    });\n  };\n\n  useEffect(() => {\n    d = generateSpectrum();\n  }, []);\n\n  const downloadSpectrum = () => {\n    const blob = new Blob([data], { type: \"text/plain;charset=utf-8\" });\n    saveAs(blob, \"spectrum.csv\");\n  };\n\n  return (\n    <div>\n      <div id=\"spectrum\" ref={chartRef} />\n      <button onClick={downloadSpectrum}>Download Spectrum</button>\n    </div>\n  );\n}\nexport default Spectrum;\n","import React from \"react\";\nimport \"../Style/Instructions.css\";\n\nfunction Instructions(props) {\n  return (\n    <div className=\"box\">\n      <h1 className=\"header\">Usage</h1>\n      <p className=\"instructions\">\n        In order to view a tooltip about a component of the instrument, hover\n        your mouse over it. In order to view inside the instrument, click the\n        \"See inside the instrument\" button in the top right corner. To run a\n        spectrum, specify the wavelength range and the temperature using the\n        controls and then click the \"Run Spectrum\" button. A spectrum should\n        appear after a few seconds. If you wish to change the parameters, do so\n        and then click \"Run Spectrum\" again, as it does not update\n        automatically. Once the spectrum is loaded, you may download the\n        spectrum as a .csv file. You may interact with the spectrum in a few\n        ways: Zoom in on a section by pressing down the left mouse button,\n        dragging across the section, and then releasing. Scrub the spectrum by\n        pressing down the left mouse button and dragging across the spectrum\n        while pressing the \"shift\" key. Reset the view by double-clicking on the\n        spectrum.\n      </p>\n    </div>\n  );\n}\n\nexport default Instructions;\n\n// import React from 'react'\n// import '../Style/Instructions.css'\n\n// function Instructions() {\n//     return (\n//     <div className=\"box\">\n//             <h1 className=\"header\">Usage</h1>\n//             <p className=\"instructions\">\n//                 In order to view a tooltip about a component of the instrument, hover your mouse over it. In order to view inside the instrument, click the \"See inside the instrument\" button in the top right corner. To run a spectrum, specify the wavelength range and the temperature using the controls and then click the \"Run Spectrum\" button. A spectrum should appear after a few seconds. If you wish to change the parameters, do so and then click \"Run Spectrum\" again, as it does not update automatically. Once the spectrum is loaded, you may download the spectrum as a .csv file. You may interact with the spectrum in a few ways: Zoom in on a section by pressing down the left mouse button, dragging across the section, and then releasing. Scrub the spectrum by pressing down the left mouse button and dragging across the spectrum while pressing the \"shift\" key. Reset the view by double-clicking on the spectrum.\n//             </p>\n//         </div>\n//     );\n// }\n\n// export default Instructions;\n","import React from \"react\";\nimport \"../Style/VirtualHendiInterface.css\";\n\nexport function Error(props) {\n  return (\n    <div className=\"spinner-container\">\n      <img src=\"/Virtual-HeNDI-Spectrometer/error.png\" className=\"error\" alt=\"error\" />\n      <label>Error fetching spectrum!</label>\n    </div>\n  );\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport Hendi from \"./Hendi\";\nimport \"../Style/VirtualHendiInterface.css\";\nimport TemperatureController from \"./TemperatureController\";\nimport WavelengthController from \"./WavelengthController\";\nimport Spinner from \"./Spinner\";\nimport Spectrum from \"./Spectrum\";\nimport axios from \"axios\";\nimport Instructions from \"./Instructions\";\nimport { Error } from \"./Error\";\n\nfunction VirtualHendiInterface() {\n  const hendiRef = React.createRef();\n  const tempRef = React.createRef();\n  const [temperature, setTemperature] = useState(13.5);\n  const lambdaRef = React.createRef();\n  const [min_lambda, setMinLambda] = useState(2030);\n  const [max_lambda, setMaxLambda] = useState(2090);\n  let _isMounted = false;\n\n  const [fgState, setFgState] = useState(true);\n  const [toggleFgTitle, setToggleFgTitle] = useState(\n    \"See Inside the Instrument\"\n  );\n  const [spectrum, setSpectrum] = useState(\"\");\n  const [loadingSpectrum, setLoadingSpectrum] = useState(false);\n  const [spectrumError, setSpectrumError] = useState(false);\n\n  const baseUrl = window.location.href.includes(\"localhost:3000\")\n    ? \"http://localhost:3000\"\n    : \"https://api.virtual-hendi.isaac-j-miller.com\";\n\n  useEffect(() => {\n    _isMounted = true;\n  }, []);\n\n  const hideForeground = () => {\n      if (fgState) {\n        setFgState(false);\n        setToggleFgTitle(\"Toggle Instrument Transparency\");\n      } else {\n        setFgState(true);\n        setToggleFgTitle(\"See Inside the Instrument\");\n      }\n  };\n\n  const getSpectrum = () => {\n    const params = {\n      temperature,\n      min_lambda,\n      max_lambda,\n    };\n    console.log(params);\n    const url = `${baseUrl}/interpolator/${params.temperature}/${params.min_lambda}/${params.max_lambda}`;\n    // const url = `https://api.virtual-hendi.isaac-j-miller.com/interpolator/${params.temperature}/${params.min_lambda}/${params.max_lambda}`;\n    console.log(\"requesting spectrum\");\n    setLoadingSpectrum(true);\n    axios\n      .get(url)\n      .then((resp1) => {\n        // const urlToUse = `https://virtual-hendi.isaac-j-miller.com${resp1.data.url}`;\n        const urlToUse = resp1.data.url;\n        axios\n          .get(urlToUse)\n          .then((resp) => {\n            console.log(\"received spectrum\");\n            setSpectrum(resp.data);\n            setLoadingSpectrum(false);\n            setSpectrumError(false);\n          })\n          .catch((reason) => {\n            console.error(\"error loading spectrum:\", reason);\n            setLoadingSpectrum(false);\n            setSpectrumError(true);\n          });\n      })\n      .catch((reason) => {\n        console.error(\"error triggering lambda:\", reason);\n        setLoadingSpectrum(false);\n        setSpectrumError(true);\n      });\n  };\n\n  return (\n    <div id=\"main-virtual-hendi-interface-container\">\n      <Hendi id=\"hendi-instrument\" ref={hendiRef} seeOutside={fgState} />\n      <div id=\"control-box\">\n        <button onClick={hideForeground}>{toggleFgTitle}</button>\n        <TemperatureController\n          id=\"temperature-controller\"\n          ref={tempRef}\n          temperature={temperature}\n          setTemperature={setTemperature}\n        />\n        <WavelengthController\n          id=\"wavelength-controller\"\n          parent={this}\n          ref={lambdaRef}\n          min_lambda={min_lambda}\n          setMinLambda={setMinLambda}\n          max_lambda={max_lambda}\n          setMaxLambda={setMaxLambda}\n        />\n        <button onClick={getSpectrum}>Run Spectrum</button>\n        {loadingSpectrum ? (\n          <Spinner />\n        ) : spectrumError ? (\n          <Error />\n        ) : (\n          spectrum && <Spectrum data={spectrum} />\n        )}\n        <Instructions></Instructions>\n      </div>\n    </div>\n  );\n}\nexport default VirtualHendiInterface;\n","import React from \"react\";\nimport VirtualHendiInterface from \"./Components/VirtualHendiInterface\";\n\nfunction App() {\n  return <VirtualHendiInterface />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\ndocument.title = \"Virtual HENDI Spectrometer\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}